# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    working_directory: ~/webmd
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.2-apache-stretch-node-browsers
        environment:
            APP_ENV: dev
            DATABASE_URL: mysql://root:root@127.0.0.1/webmd
      - image: circleci/mysql:5.7
        environment:
            MYSQL_ROOT_PASSWORD: 'root'
            MYSQL_DATABASE: webmd

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19

    steps:
      - checkout

      - run: sudo apt-get update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo apt-get install imagemagick
      - run: sudo apt install libmagickwand-dev imagemagick
      - run: sudo pecl install imagick
      - run: sudo docker-php-ext-enable imagick
      - run: sudo apt-get install -y zlib1g-dev libicu-dev g++
      - run: sudo docker-php-ext-configure intl
      - run: sudo docker-php-ext-install intl
      - run:
            name:   Wait for MYSQL
            command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s

      - run: sudo composer self-update
      - run: composer install
  deploy:
    working_directory: ~/webmd
    docker:
       - image: circleci/php:7.2-apache-stretch-node-browsers
    steps:
        - checkout
        - run: sudo apt-get install imagemagick
        - run: sudo apt install libmagickwand-dev imagemagick
        - run: sudo pecl install imagick
        - run: sudo docker-php-ext-enable imagick
        - run: sudo apt-get install -y zlib1g-dev libicu-dev g++
        - run: sudo docker-php-ext-configure intl
        - run: sudo docker-php-ext-install intl
        - run:
            name: Composer install
            command: composer install
        - run:
            name: Clear cache
            command: php bin/console cache:clear --env=dev --no-interaction
        - run:
            name: Cache warmup
            command: php bin/console cache:warmup --env=dev --no-interaction
        - run:
            name: Yarn
            command: yarn install && yarn run encore production
        - run:
            name: Add droplet
            command: ssh-keyscan -H $DROPLET_IP >> ~/.ssh/known_hosts
        - run:
            name: Pre-deploy
            command: ssh -T $DROPLET_USER:$DROPLET_IP < bin/deploy/pre_deploy.sh
        - run:
            name: Deploy code
            command: rsync -vzcrSLhp --exclude '.env' --delete ~/webmd/ $DROPLET_USER@$DROPLET_IP:/var/www/webmd_current
        - run:
            name: Post deploy
            command: ssh -T $DROPLET_USER:$DROPLET_IP < bin/deploy/deploy.sh
workflows:
    version: 2
    build-and-deploy:
        jobs:
            - build
            - deploy:
                requires:
                    - build
                filters:
                    branches:
                        only: master
